// <auto-generated />
using System;
using AircraftMaintenanceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AircraftMaintenanceAPI.Migrations
{
    [DbContext(typeof(AircraftMaintenanceContext))]
    [Migration("20240711091828_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastMaintenanceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("MaintenancePerformed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Aircrafts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastMaintenanceDate = new DateTime(2024, 7, 11, 2, 18, 28, 313, DateTimeKind.Local).AddTicks(6292),
                            MaintenancePerformed = false,
                            Model = "Boeing 747",
                            SerialNumber = "SN747"
                        },
                        new
                        {
                            Id = 2,
                            LastMaintenanceDate = new DateTime(2024, 7, 11, 2, 18, 28, 313, DateTimeKind.Local).AddTicks(6303),
                            MaintenancePerformed = false,
                            Model = "Airbus A320",
                            SerialNumber = "SNA320"
                        });
                });

            modelBuilder.Entity("AircraftMaintenanceAPI.Models.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("AircraftMaintenanceAPI.Models.PerformanceMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("MetricValue")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.ToTable("PerformanceMetrics");
                });

            modelBuilder.Entity("AircraftMaintenanceAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AircraftMaintenanceAPI.Models.MaintenanceRecord", b =>
                {
                    b.HasOne("Aircraft", "Aircraft")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("AircraftMaintenanceAPI.Models.PerformanceMetric", b =>
                {
                    b.HasOne("Aircraft", "Aircraft")
                        .WithMany("PerformanceMetrics")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("Aircraft", b =>
                {
                    b.Navigation("MaintenanceRecords");

                    b.Navigation("PerformanceMetrics");
                });
#pragma warning restore 612, 618
        }
    }
}
